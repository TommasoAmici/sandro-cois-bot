name: Build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.1.6

      - run: bun install --ignore-scripts --no-progress
      - run: bun test:ci
      - run: bun lint:check
      - run: bun typecheck

  release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs:
      - build
    outputs:
      skipped: ${{ steps.output_step.outputs.skipped }}
      version: ${{ steps.output_step.outputs.version }}
    steps:
      - uses: actions/checkout@v3
      - name: Create changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          git-push: "false"
          skip-version-file: "true"
          output-file: "false"
          skip-commit: "true"
          skip-on-empty: "true"
          skip-tag: "true"

      - name: Create Release
        run: gh release create "$TAG_NAME" --notes "$BODY"
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        env:
          GH_TOKEN: ${{ github.token }}
          TAG_NAME: ${{ steps.changelog.outputs.tag }}
          BODY: ${{ steps.changelog.outputs.clean_changelog }}

      - name: Output
        id: output_step
        run: |
          echo "skipped=${{ steps.changelog.outputs.skipped }}" >> $GITHUB_OUTPUT
          echo "version=${{ steps.changelog.outputs.version }}" >> $GITHUB_OUTPUT

  docker:
    name: Build Docker image
    runs-on: ubuntu-latest
    needs:
      - release
    if: ${{ needs.release.outputs.skipped == 'false' }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/sandro-cois-bot:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/sandro-cois-bot:${{ needs.release.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs:
      - docker
    steps:
      - uses: actions/checkout@v3

      - name: rsync deployments
        uses: burnett01/rsync-deployments@5.2
        with:
          switches: -avzr --delete --exclude=".git"
          path: deploy.sh
          remote_path: /apps/sandro-cois/
          remote_host: ${{ secrets.DEPLOY_HOST }}
          remote_port: ${{ secrets.DEPLOY_PORT }}
          remote_user: ${{ secrets.DEPLOY_USER }}
          remote_key: ${{ secrets.DEPLOY_KEY }}

      - name: Restart service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: ${{ secrets.DEPLOY_PORT }}
          script: |
            sh /apps/sandro-cois/deploy.sh
